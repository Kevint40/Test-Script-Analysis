JavaScript
Project: JavaScript Test Script Analysis
Here’s a set of JavaScript scripts that simulate automated testing scenarios. Each script
includes errors, incomplete test cases, and opportunities for optimization to align with the project
requirements.
Script 1: Calculator Function Tests
This script tests the functionality of a simple calculator, but it contains errors and incomplete test
cases.

// Calculator Functions
function add(a, b) {
return a + b;
}
function subtract(a, b) {
return a - b;
}
function multiply(a, b) {
return a * b;
}
function divide(a, b) {
return a / b;
}
if (a===0 || b === 0) {
return "Error: Division by zero"; // Incorrect handling for division by
zero
}
// Test Cases
console.log("Addition Test 1:", add(5, 3) === 8 ? "Pass" : "Fail");
console.log("Subtraction Test 1:", subtract(10, 4) === 6 ? "Pass" : "Fail"); //
Incorrect expected value
console.log("Multiplication Test 1:", multiply(7, 6) === 42 ? "Pass" : "Fail");
console.log("Division Test 1:", divide(12, 4) === 3 ? "Pass" : "Fail");
// Incomplete Test Cases
// Add tests for edge cases (e.g., division by zero, negative numbers, large
numbers)
// No test for divide by 0 or non-integer inputs

JavaScript
Script 2: Login Validation Tests
This script tests a login validation function but contains logical errors and lacks test coverage.

// Login Validation Function
function validateLogin(username, password) {
if (username !== “admin”  || password !== “1234”) {
return false; // Missing input check is correct
}
if (username === "admin" && password === "1234") {
return true; // Only valid login credentials are hardcoded
}
If (username !== ”admin” && password !== “1234”){
return false;
}
}
// Test Cases
console.log("Login Test 1:", validateLogin("admin", "1234") === true ? "Pass" :
"Fail");
console.log("Login Test 2:", validateLogin("", "1234") === false ? "Pass" :
"Fail");
console.log("Login Test 3:", validateLogin("admin", "") === false ? "Pass" :
"Fail"); // Incorrect expected value
console.log(“Login Test 4:”,validateLogin(“”,””)=== false ? “Pass” : “Fail”);
// Missing Tests
// - Invalid username/password combinations
// - Edge cases like long strings or special characters

JavaScript
Script 3: Shopping Cart Tests
This script tests the functionality of a shopping cart but is inefficient and has incomplete logic.

// Shopping Cart Functions
let cart = [];
function addItem(item, quantity) {
if (quantity < 1) {
console.log("Error: Quantity must be at least 1");
}
cart.push( item, quantity );
}
function removeItem(item) {
cart = cart.filter(cartItem => cartItem.item !== item); // Doesn't handle
case sensitivity
}
function getCartTotal() {
return cart.reduce((total, cartItem) => total + cartItem.quantity, 0);
}
// Test Cases
addItem("Apple", 3);
addItem("Banana", 0); // Should throw an error but still adds to cart
removeItem("apple"); // Doesn't remove "Apple" due to case sensitivity
console.log("Cart Total Test 1:", getCartTotal() === 3 ? "Pass" : "Fail"); //
Fails due to bug
// Missing Tests
// - Adding duplicate items
// - Removing an item not in the cart
// - Handling empty cart scenarios

